{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\components\\\\Reddit\\\\Reddit.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Votes from \"../Votes/Votes\";\nconst RedditDiv = styled.div`\n  margin: 5px;\n  padding: 10px;\n  font-family: arial, sans-serif;\n  font-size: 15px;\n  font-weight: bold;\n`;\nconst WrapperDiv = styled.div`\n  display: grid;\n  margin: 10px;\n\n  grid-template-columns: 25% 25% 25% 25%;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n    grid-template-columns: 50% 50%;\n  }\n`;\nconst AuthorDiv = styled.div`\n  font-size: 10px;\n  color: gray;\n`;\n\nconst dataToLinkComponent = (permalink, title) => {\n  const url = `https://www.reddit.com/${permalink}`;\n  return React.createElement(\"a\", {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, title);\n};\n\nconst Reddit = props => {\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\n  const resource = props.redditData; //const resourceArray = resourceToResourceArray(resource)\n\n  return React.createElement(WrapperDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(RedditDiv, Object.assign({\n    key: index\n  }, object, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, dataToLinkComponent(object.permalink, object.title), React.createElement(AuthorDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"By: \", object.author), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, object.num_comments, \" Comments\"), React.createElement(Votes, {\n    ups: object.ups,\n    downs: object.downs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))));\n};\n\nexport default Reddit;","map":{"version":3,"sources":["F:/Work/fortressapp/src/components/Reddit/Reddit.js"],"names":["React","styled","Votes","RedditDiv","div","WrapperDiv","AuthorDiv","dataToLinkComponent","permalink","title","url","Reddit","props","resource","redditData","map","object","index","author","num_comments","ups","downs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;;;CAA7B;AAQA,MAAMC,UAAU,GAAGJ,MAAM,CAACG,GAAI;;;;;;;;;;CAA9B;AAYA,MAAME,SAAS,GAAGL,MAAM,CAACG,GAAI;;;CAA7B;;AAKA,MAAMG,mBAAmB,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChD,QAAMC,GAAG,GAAI,0BAAyBF,SAAU,EAAhD;AACA,SAAO;AAAG,IAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CAAP;AACD,CAHD;;AAKA,MAAME,MAAM,GAAGC,KAAK,IAAI;AAEtB;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAvB,CAHsB,CAItB;;AAEA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA;AAAhB,KAA2BD,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,mBAAmB,CAACS,MAAM,CAACR,SAAR,EAAmBQ,MAAM,CAACP,KAA1B,CADtB,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgBO,MAAM,CAACE,MAAvB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,MAAM,CAACG,YAAb,cAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEH,MAAM,CAACI,GAAnB;AAAwB,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADD,CADH,CADF;AAcD,CApBD;;AAsBA,eAAeV,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Votes from \"../Votes/Votes\";\r\n\r\nconst RedditDiv = styled.div`\r\n  margin: 5px;\r\n  padding: 10px;\r\n  font-family: arial, sans-serif;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst WrapperDiv = styled.div`\r\n  display: grid;\r\n  margin: 10px;\r\n\r\n  grid-template-columns: 25% 25% 25% 25%;\r\n\r\n  @media (max-width: 800px) {\r\n    flex-direction: column;\r\n    grid-template-columns: 50% 50%;\r\n  }\r\n`;\r\n\r\nconst AuthorDiv = styled.div`\r\n  font-size: 10px;\r\n  color: gray;\r\n`;\r\n\r\nconst dataToLinkComponent = (permalink, title) => {\r\n  const url = `https://www.reddit.com/${permalink}`;\r\n  return <a href={url}>{title}</a>;\r\n};\r\n\r\nconst Reddit = props => {\r\n\r\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\r\n  const resource = props.redditData;\r\n  //const resourceArray = resourceToResourceArray(resource)\r\n\r\n  return (\r\n    <WrapperDiv>\r\n      {resource.map((object, index) => (\r\n        <RedditDiv key={index} {...object}>\r\n          <div>\r\n            {dataToLinkComponent(object.permalink, object.title)}\r\n            <AuthorDiv>By: {object.author}</AuthorDiv>\r\n            <div>{object.num_comments} Comments</div>\r\n            <Votes ups={object.ups} downs={object.downs} />\r\n          </div>\r\n        </RedditDiv>\r\n      ))}\r\n    </WrapperDiv>\r\n  );\r\n};\r\n\r\nexport default Reddit;\r\n"]},"metadata":{},"sourceType":"module"}