{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Reddit from \"./components/Reddit\";\nimport { removePostArray, removeDataArray, parseDataArray, sortDataArray } from \"./transformations/transformations\";\nimport styled from \"styled-components\";\nconst ContainerDiv = styled.div`\n  background: gray;\n  position: fixed;\n`;\n\nconst App = () => {\n  const [resource, setResource] = useState([]); //TODO:  fix CORS error\n\n  useEffect(() => {\n    let uri = \"https://www.reddit.com/r/ProgrammerHumor.json?limit=20\";\n    fetch(uri).then(response => {\n      return response.json();\n    }).then(response => {\n      //TODO:  deconstruct data\n      //TODO:  condense to either one or a couple values...currying???(removepostarray.removedataarray.parsedataarray)\n      console.log(\"raw response \", response); //console.log('first children data ', response.data.children)\n      //  const parsedPostArray = responseToPostArray(response);\n\n      const postArray = removePostArray(response);\n      const postDataArray = removeDataArray(postArray);\n      const parsedDataArray = parseDataArray(postDataArray);\n      const sortedDataArray = sortDataArray(parsedDataArray); //  console.log(\"postArray \", postDataArray);\n\n      setResource(sortedDataArray);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // const destructureFunc = (object) =>{\n  //   return const {title, author, permalink, ups, downs} = object.data\n  // }\n  // {resource.map((object, index) => (\n  //   <div>\n  //   <p key={index}>TITLE:  {object.data.title}</p>\n  //   <p key={index}>AUTHOR:  {object.data.author}</p>\n  //   <p key={index}>AUTHOR FULL NAME:   {object.data.permalink}</p>\n  //   <p key={index}>UP VOTES? {object.data.ups}</p>\n  //   <p key={index}>DOWN VOTES? {object.data.downs}</p>\n  //   <p key={index}>NUMBER OF COMMENTS:  {object.data.num_comments}</p>\n  //   </div>\n  // ))}\n\n  return React.createElement(ContainerDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Reddit, {\n    redditData: resource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/Work/fortressapp/src/App.js"],"names":["React","useEffect","useState","Reddit","removePostArray","removeDataArray","parseDataArray","sortDataArray","styled","ContainerDiv","div","App","resource","setResource","uri","fetch","then","response","json","console","log","postArray","postDataArray","parsedDataArray","sortedDataArray","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,mCALP;AAMA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAI;;;CAAhC;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CADgB,CAEhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,GAAG,GAAG,wDAAV;AAEAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQC,QAAQ,IAAI;AAChB;AACA;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,QAA7B,EAHgB,CAIhB;AACA;;AACA,YAAMI,SAAS,GAAGjB,eAAe,CAACa,QAAD,CAAjC;AACA,YAAMK,aAAa,GAAGjB,eAAe,CAACgB,SAAD,CAArC;AACA,YAAME,eAAe,GAAGjB,cAAc,CAACgB,aAAD,CAAtC;AACA,YAAME,eAAe,GAAGjB,aAAa,CAACgB,eAAD,CAArC,CATgB,CAUhB;;AAEAV,MAAAA,WAAW,CAACW,eAAD,CAAX;AACD,KAjBH,EAkBGC,KAlBH,CAkBSC,KAAK,IAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KApBH;AAqBD,GAxBQ,EAwBN,EAxBM,CAAT,CAHgB,CA6BhB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEd,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAnDD;;AAqDA,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Reddit from \"./components/Reddit\";\r\nimport {\r\n  removePostArray,\r\n  removeDataArray,\r\n  parseDataArray,\r\n  sortDataArray\r\n} from \"./transformations/transformations\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerDiv = styled.div`\r\n  background: gray;\r\n  position: fixed;\r\n`;\r\n\r\nconst App = () => {\r\n  const [resource, setResource] = useState([]);\r\n  //TODO:  fix CORS error\r\n  useEffect(() => {\r\n    let uri = \"https://www.reddit.com/r/ProgrammerHumor.json?limit=20\";\r\n\r\n    fetch(uri)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        //TODO:  deconstruct data\r\n        //TODO:  condense to either one or a couple values...currying???(removepostarray.removedataarray.parsedataarray)\r\n        console.log(\"raw response \", response);\r\n        //console.log('first children data ', response.data.children)\r\n        //  const parsedPostArray = responseToPostArray(response);\r\n        const postArray = removePostArray(response);\r\n        const postDataArray = removeDataArray(postArray);\r\n        const parsedDataArray = parseDataArray(postDataArray);\r\n        const sortedDataArray = sortDataArray(parsedDataArray);\r\n        //  console.log(\"postArray \", postDataArray);\r\n\r\n        setResource(sortedDataArray);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // const destructureFunc = (object) =>{\r\n  //   return const {title, author, permalink, ups, downs} = object.data\r\n  // }\r\n\r\n  // {resource.map((object, index) => (\r\n  //   <div>\r\n  //   <p key={index}>TITLE:  {object.data.title}</p>\r\n  //   <p key={index}>AUTHOR:  {object.data.author}</p>\r\n  //   <p key={index}>AUTHOR FULL NAME:   {object.data.permalink}</p>\r\n  //   <p key={index}>UP VOTES? {object.data.ups}</p>\r\n  //   <p key={index}>DOWN VOTES? {object.data.downs}</p>\r\n  //   <p key={index}>NUMBER OF COMMENTS:  {object.data.num_comments}</p>\r\n  //   </div>\r\n  // ))}\r\n\r\n  return (\r\n    <ContainerDiv>\r\n      <div>\r\n        <Reddit redditData={resource} />\r\n      </div>\r\n    </ContainerDiv>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}