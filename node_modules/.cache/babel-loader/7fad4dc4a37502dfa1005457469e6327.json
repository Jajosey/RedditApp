{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\components\\\\Reddit.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport Votes from \"./Votes\";\n\nconst regularDisplay = info => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, info);\n};\n\nconst RedditDiv = styled.div`\n    padding: 20px;    \n`; // returns\n\nconst dataToLinkComponent = (permalink, title) => {\n  const url = `https://www.reddit.com/${permalink}`;\n  return React.createElement(\"a\", {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, title);\n};\n\nconst Reddit = props => {\n  //console.log(props.redditData);\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\n  const resource = props.redditData; //const resourceArray = resourceToResourceArray(resource)\n\n  console.log(\"resource as a whole \", resource);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(RedditDiv, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, dataToLinkComponent(object.permalink, object.title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"AUTHOR: \", object.author), React.createElement(Votes, {\n    ups: object.ups,\n    downs: object.downs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"NUMBER OF COMMENTS: \", object.num_comments), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"SCORE: \", object.score))));\n};\n\nexport default Reddit;","map":{"version":3,"sources":["F:/Work/fortressapp/src/components/Reddit.js"],"names":["React","styled","Votes","regularDisplay","info","RedditDiv","div","dataToLinkComponent","permalink","title","url","Reddit","props","resource","redditData","console","log","map","object","index","author","ups","downs","num_comments","score"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAK;;CAA9B,C,CAIA;;AACA,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChD,QAAMC,GAAG,GAAI,0BAAyBF,SAAU,EAAhD;AACA,SAAO;AAAG,IAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CAAP;AACD,CAHD;;AAKA,MAAME,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAvB,CAHsB,CAItB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACI,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,mBAAmB,CAACW,MAAM,CAACV,SAAR,EAAmBU,MAAM,CAACT,KAA1B,CADvB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcS,MAAM,CAACE,MAArB,CAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEF,MAAM,CAACG,GAAnB;AAAwB,IAAA,KAAK,EAAEH,MAAM,CAACI,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0BJ,MAAM,CAACK,YAAjC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaL,MAAM,CAACM,KAApB,CALF,CADD,CADH,CADF;AAaD,CAnBD;;AAqBA,eAAeb,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components'\r\nimport Votes from \"./Votes\"\r\n\r\nconst regularDisplay = info => {\r\n  return <div>{info}</div>;\r\n};\r\n\r\nconst RedditDiv = styled.div `\r\n    padding: 20px;    \r\n`\r\n\r\n// returns\r\nconst dataToLinkComponent = (permalink, title) => {\r\n  const url = `https://www.reddit.com/${permalink}`;\r\n  return <a href={url}>{title}</a>;\r\n};\r\n\r\nconst Reddit = props => {\r\n  //console.log(props.redditData);\r\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\r\n  const resource = props.redditData;\r\n  //const resourceArray = resourceToResourceArray(resource)\r\n  console.log(\"resource as a whole \", resource);\r\n  return (\r\n    <div>\r\n      {resource.map((object, index) => (\r\n        <RedditDiv key={index}>\r\n           {dataToLinkComponent(object.permalink, object.title)}\r\n          <div>AUTHOR: {object.author}</div>\r\n          <Votes ups={object.ups} downs={object.downs}/>\r\n          <div>NUMBER OF COMMENTS: {object.num_comments}</div>\r\n          <div>SCORE: {object.score}</div>\r\n       </RedditDiv>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reddit;\r\n"]},"metadata":{},"sourceType":"module"}