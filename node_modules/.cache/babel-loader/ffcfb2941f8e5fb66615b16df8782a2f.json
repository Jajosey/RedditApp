{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\components\\\\Reddit.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Votes from \"./Votes\";\nconst RedditDiv = styled.div`\n  padding: 20px;\n  display: inline-block;\n  background: ${props => props.score % 2 == 0 ? 'orange' : 'blue'}\n\n`;\n\nconst regularDisplay = info => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, info);\n}; // returns\n\n\nconst dataToLinkComponent = (permalink, title) => {\n  const url = `https://www.reddit.com/${permalink}`;\n  return React.createElement(\"a\", {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, title);\n};\n\nconst Reddit = props => {\n  //console.log(props.redditData);\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\n  const resource = props.redditData; //const resourceArray = resourceToResourceArray(resource)\n\n  console.log(\"resource as a whole \", resource);\n  console.log(\"score \", score);\n  console.log(\"score%2 \", score % 2);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(RedditDiv, Object.assign({\n    key: index\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), dataToLinkComponent(object.permalink, object.title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"AUTHOR: \", object.author), React.createElement(Votes, {\n    ups: object.ups,\n    downs: object.downs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"NUMBER OF COMMENTS: \", object.num_comments), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"SCORE: \", object.score))));\n};\n\nexport default Reddit;","map":{"version":3,"sources":["F:/Work/fortressapp/src/components/Reddit.js"],"names":["React","styled","Votes","RedditDiv","div","props","score","regularDisplay","info","dataToLinkComponent","permalink","title","url","Reddit","resource","redditData","console","log","map","object","index","author","ups","downs","num_comments"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;gBAGbC,KAAK,IAAIA,KAAK,CAACC,KAAN,GAAY,CAAZ,IAAiB,CAAjB,GAAqB,QAArB,GAAgC,MAAO;;CAHhE;;AAMA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAP;AACD,CAFD,C,CAIA;;;AACA,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChD,QAAMC,GAAG,GAAI,0BAAyBF,SAAU,EAAhD;AACA,SAAO;AAAG,IAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CAAP;AACD,CAHD;;AAKA,MAAME,MAAM,GAAGR,KAAK,IAAI;AACtB;AAEA;AACA,QAAMS,QAAQ,GAAGT,KAAK,CAACU,UAAvB,CAJsB,CAKtB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,KAAtB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,KAAK,GAAC,CAA9B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,QAAQ,CAACI,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA;AAAhB,KAA2Bf,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGI,mBAAmB,CAACU,MAAM,CAACT,SAAR,EAAmBS,MAAM,CAACR,KAA1B,CADtB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcQ,MAAM,CAACE,MAArB,CAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEF,MAAM,CAACG,GAAnB;AAAwB,IAAA,KAAK,EAAEH,MAAM,CAACI,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0BJ,MAAM,CAACK,YAAjC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaL,MAAM,CAACb,KAApB,CALF,CADD,CADH,CADF;AAaD,CAtBD;;AAwBA,eAAeO,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Votes from \"./Votes\";\r\n\r\nconst RedditDiv = styled.div`\r\n  padding: 20px;\r\n  display: inline-block;\r\n  background: ${props => props.score%2 == 0 ? 'orange' : 'blue'}\r\n\r\n`;\r\nconst regularDisplay = info => {\r\n  return <div>{info}</div>;\r\n};\r\n\r\n// returns\r\nconst dataToLinkComponent = (permalink, title) => {\r\n  const url = `https://www.reddit.com/${permalink}`;\r\n  return <a href={url}>{title}</a>;\r\n};\r\n\r\nconst Reddit = props => {\r\n  //console.log(props.redditData);\r\n\r\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\r\n  const resource = props.redditData;\r\n  //const resourceArray = resourceToResourceArray(resource)\r\n  console.log(\"resource as a whole \", resource);\r\n  console.log(\"score \", score)\r\n  console.log(\"score%2 \", score%2)\r\n  return (\r\n    <div>\r\n      {resource.map((object, index) => (\r\n        <RedditDiv key={index} {...props}>\r\n          {dataToLinkComponent(object.permalink, object.title)}\r\n          <div>AUTHOR: {object.author}</div>\r\n          <Votes ups={object.ups} downs={object.downs} />\r\n          <div>NUMBER OF COMMENTS: {object.num_comments}</div>\r\n          <div>SCORE: {object.score}</div>\r\n        </RedditDiv>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reddit;\r\n"]},"metadata":{},"sourceType":"module"}