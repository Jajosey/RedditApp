{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\components\\\\Reddit.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Votes from \"./Votes\";\nconst RedditDiv = styled.div`\n  margin: 10px;\n  padding: 20px;\n  background: ${object => object.score % 2 === 0 ? \"orange\" : \"blue\"};\n  font-family: arial, sans-serif;\n  font-size: 15px;\n  font-weight: bold;\n`;\nconst WrapperDiv = styled.div`\n  display: grid;\n  margin: 10px;\n\n  @media (min-width: 800px) {\n    flex-direction: column;\n    grid-template-columns: 50% 50%;\n  }\n  @media (max-width: 10000px) {\n    flex-direction: column;\n    grid-template-columns: 25% 25% 25% 25%;\n  }\n`;\n\nconst regularDisplay = info => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, info);\n}; // returns\n\n\nconst dataToLinkComponent = (permalink, title) => {\n  const url = `https://www.reddit.com/${permalink}`;\n  return React.createElement(\"a\", {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title);\n};\n\nconst Reddit = props => {\n  //console.log(props.redditData);\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\n  const resource = props.redditData; //const resourceArray = resourceToResourceArray(resource)\n\n  return React.createElement(WrapperDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(RedditDiv, Object.assign({\n    key: index\n  }, object, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), dataToLinkComponent(object.permalink, object.title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"AUTHOR: \", object.author), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"NUMBER OF COMMENTS: \", object.num_comments), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"SCORE: \", object.score), React.createElement(Votes, {\n    ups: object.ups,\n    downs: object.downs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default Reddit;","map":{"version":3,"sources":["F:/Work/fortressapp/src/components/Reddit.js"],"names":["React","styled","Votes","RedditDiv","div","object","score","WrapperDiv","regularDisplay","info","dataToLinkComponent","permalink","title","url","Reddit","props","resource","redditData","map","index","author","num_comments","ups","downs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;gBAGbC,MAAM,IAAKA,MAAM,CAACC,KAAP,GAAe,CAAf,KAAqB,CAArB,GAAyB,QAAzB,GAAoC,MAAQ;;;;CAHvE;AASA,MAAMC,UAAU,GAAGN,MAAM,CAACG,GAAI;;;;;;;;;;;;CAA9B;;AAcA,MAAMI,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAP;AACD,CAFD,C,CAIA;;;AACA,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChD,QAAMC,GAAG,GAAI,0BAAyBF,SAAU,EAAhD;AACA,SAAO;AAAG,IAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CAAP;AACD,CAHD;;AAKA,MAAME,MAAM,GAAGC,KAAK,IAAI;AACtB;AAEA;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAvB,CAJsB,CAKtB;;AAEA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAa,CAACb,MAAD,EAASc,KAAT,KACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA;AAAhB,KAA2Bd,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGK,mBAAmB,CAACL,MAAM,CAACM,SAAR,EAAmBN,MAAM,CAACO,KAA1B,CADtB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcP,MAAM,CAACe,MAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0Bf,MAAM,CAACgB,YAAjC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAahB,MAAM,CAACC,KAApB,CAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAED,MAAM,CAACiB,GAAnB;AAAwB,IAAA,KAAK,EAAEjB,MAAM,CAACkB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,CADH,CADF;AAaD,CApBD;;AAsBA,eAAeT,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Votes from \"./Votes\";\r\n\r\nconst RedditDiv = styled.div`\r\n  margin: 10px;\r\n  padding: 20px;\r\n  background: ${object => (object.score % 2 === 0 ? \"orange\" : \"blue\")};\r\n  font-family: arial, sans-serif;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst WrapperDiv = styled.div`\r\n  display: grid;\r\n  margin: 10px;\r\n\r\n  @media (min-width: 800px) {\r\n    flex-direction: column;\r\n    grid-template-columns: 50% 50%;\r\n  }\r\n  @media (max-width: 10000px) {\r\n    flex-direction: column;\r\n    grid-template-columns: 25% 25% 25% 25%;\r\n  }\r\n`;\r\n\r\nconst regularDisplay = info => {\r\n  return <div>{info}</div>;\r\n};\r\n\r\n// returns\r\nconst dataToLinkComponent = (permalink, title) => {\r\n  const url = `https://www.reddit.com/${permalink}`;\r\n  return <a href={url}>{title}</a>;\r\n};\r\n\r\nconst Reddit = props => {\r\n  //console.log(props.redditData);\r\n\r\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\r\n  const resource = props.redditData;\r\n  //const resourceArray = resourceToResourceArray(resource)\r\n\r\n  return (\r\n    <WrapperDiv>\r\n      {resource.map((object, index) => (\r\n        <RedditDiv key={index} {...object}>\r\n          {dataToLinkComponent(object.permalink, object.title)}\r\n          <div>AUTHOR: {object.author}</div>\r\n          <div>NUMBER OF COMMENTS: {object.num_comments}</div>\r\n          <div>SCORE: {object.score}</div>\r\n          <Votes ups={object.ups} downs={object.downs} />\r\n        </RedditDiv>\r\n      ))}\r\n    </WrapperDiv>\r\n  );\r\n};\r\n\r\nexport default Reddit;\r\n"]},"metadata":{},"sourceType":"module"}