{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Reddit from \"./components/Reddit\";\n\nconst App = () => {\n  const [resource, setResource] = useState([]); //TODO:  fix CORS error\n\n  useEffect(() => {\n    //TODO:  only get top 20 results\n    let uri = \"https://www.reddit.com/r/ProgrammerHumor.json\";\n\n    if (uri) {\n      fetch(uri).then(data => {\n        return data.json();\n      }).then(data => {\n        console.log(\"length \", data.data.children.length); //TODO:  deconstruct data\n\n        setResource(data.data.children);\n\n        for (let element of data.data.children) {\n          console.log(\"number of comments\", element.data.num_comments);\n          console.log(\"title \", element.data.title);\n          console.log(\"author's full name \", element.data.author_fullname);\n          console.log(\"upvotes???? \", element.data.ups);\n          console.log(\"downvotes???? \", element.data.downs);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } //   axios\n    //     .get(uri)\n    //     .then(function(response) {\n    //       console.log(response);\n    //          for (let element of data.data.children) {\n    //        console.log(\"number of comments\", element.data.num_comments);\n    //            console.log(\"title \", element.data.title);\n    //            console.log(\"author's full name \", element.data.author_fullname);\n    //            console.log('upvotes???? ', element.data.ups );\n    //            console.log('downvotes???? ', element.data.downs )\n    //          }\n    //         })\n    //     .catch(function(error) {\n    //       console.log(error);\n    //     });\n\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(\"p\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, object.data.num_comments)), React.createElement(Reddit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/Work/fortressapp/src/App.js"],"names":["React","useEffect","useState","Reddit","App","resource","setResource","uri","fetch","then","data","json","console","log","children","length","element","num_comments","title","author_fullname","ups","downs","catch","error","map","object","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC,CADgB,CAEhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIM,GAAG,GAAG,+CAAV;;AACA,QAAIA,GAAJ,EAAS;AACPC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,IAAI,IAAI;AACZ,eAAOA,IAAI,CAACC,IAAL,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQC,IAAI,IAAI;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAI,CAACA,IAAL,CAAUI,QAAV,CAAmBC,MAA1C,EADY,CAEZ;;AACAT,QAAAA,WAAW,CAACI,IAAI,CAACA,IAAL,CAAUI,QAAX,CAAX;;AACA,aAAK,IAAIE,OAAT,IAAoBN,IAAI,CAACA,IAAL,CAAUI,QAA9B,EAAwC;AACtCF,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,OAAO,CAACN,IAAR,CAAaO,YAA/C;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,OAAO,CAACN,IAAR,CAAaQ,KAAnC;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,OAAO,CAACN,IAAR,CAAaS,eAAhD;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,OAAO,CAACN,IAAR,CAAaU,GAAzC;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,OAAO,CAACN,IAAR,CAAaW,KAA3C;AACD;AACF,OAfH,EAgBGC,KAhBH,CAgBSC,KAAK,IAAI;AACdX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,OAlBH;AAmBD,KAvBa,CAyBd;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAzCQ,EAyCN,EAzCM,CAAT;AA0CA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,QAAQ,CAACmB,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,MAAM,CAACf,IAAP,CAAYO,YAA5B,CADD,CADH,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CArDD;;AAuDA,eAAeb,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Reddit from \"./components/Reddit\";\r\n\r\nconst App = () => {\r\n  const [resource, setResource] = useState([]);\r\n  //TODO:  fix CORS error\r\n  useEffect(() => {\r\n    //TODO:  only get top 20 results\r\n    let uri = \"https://www.reddit.com/r/ProgrammerHumor.json\";\r\n    if (uri) {\r\n      fetch(uri)\r\n        .then(data => {\r\n          return data.json();\r\n        })\r\n        .then(data => {\r\n          console.log(\"length \", data.data.children.length);\r\n          //TODO:  deconstruct data\r\n          setResource(data.data.children);\r\n          for (let element of data.data.children) {\r\n            console.log(\"number of comments\", element.data.num_comments);\r\n            console.log(\"title \", element.data.title);\r\n            console.log(\"author's full name \", element.data.author_fullname);\r\n            console.log(\"upvotes???? \", element.data.ups);\r\n            console.log(\"downvotes???? \", element.data.downs);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    //   axios\r\n    //     .get(uri)\r\n    //     .then(function(response) {\r\n    //       console.log(response);\r\n    //          for (let element of data.data.children) {\r\n\r\n    //        console.log(\"number of comments\", element.data.num_comments);\r\n    //            console.log(\"title \", element.data.title);\r\n    //            console.log(\"author's full name \", element.data.author_fullname);\r\n    //            console.log('upvotes???? ', element.data.ups );\r\n    //            console.log('downvotes???? ', element.data.downs )\r\n    //          }\r\n    //         })\r\n    //     .catch(function(error) {\r\n    //       console.log(error);\r\n    //     });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {resource.map((object, index) => (\r\n        <p key={index}>{object.data.num_comments}</p>\r\n      ))}\r\n      <Reddit />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}