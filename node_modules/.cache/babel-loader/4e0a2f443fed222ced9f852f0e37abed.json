{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\components\\\\Reddit.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Votes from \"./Votes\";\nconst RedditDiv = styled.div`\n  display:grid;\n  grid-template-columns: 33% 33% 33%\n  padding: 20px;\n  background: ${object => object.score % 2 === 0 ? 'orange' : 'blue'};\n  font-family: arial, sans-serif;\n  font-size: 15px;\n  font-weight: bold;\n`;\n\nconst regularDisplay = info => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, info);\n}; // returns\n\n\nconst dataToLinkComponent = (permalink, title) => {\n  const url = `https://www.reddit.com/${permalink}`;\n  return React.createElement(\"a\", {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title);\n};\n\nconst Reddit = props => {\n  //console.log(props.redditData);\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\n  const resource = props.redditData; //const resourceArray = resourceToResourceArray(resource)\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(RedditDiv, Object.assign({\n    key: index\n  }, object, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), dataToLinkComponent(object.permalink, object.title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"AUTHOR: \", object.author), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"NUMBER OF COMMENTS: \", object.num_comments), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"SCORE: \", object.score), React.createElement(Votes, {\n    ups: object.ups,\n    downs: object.downs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nexport default Reddit;","map":{"version":3,"sources":["F:/Work/fortressapp/src/components/Reddit.js"],"names":["React","styled","Votes","RedditDiv","div","object","score","regularDisplay","info","dataToLinkComponent","permalink","title","url","Reddit","props","resource","redditData","map","index","author","num_comments","ups","downs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;gBAIbC,MAAM,IAAIA,MAAM,CAACC,KAAP,GAAa,CAAb,KAAmB,CAAnB,GAAuB,QAAvB,GAAkC,MAAO;;;;CAJnE;;AASA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAP;AACD,CAFD,C,CAIA;;;AACA,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChD,QAAMC,GAAG,GAAI,0BAAyBF,SAAU,EAAhD;AACA,SAAO;AAAG,IAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CAAP;AACD,CAHD;;AAKA,MAAME,MAAM,GAAGC,KAAK,IAAI;AACtB;AAEA;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAvB,CAJsB,CAKtB;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAa,CAACZ,MAAD,EAASa,KAAT,KACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA;AAAhB,KAA2Bb,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGI,mBAAmB,CAACJ,MAAM,CAACK,SAAR,EAAmBL,MAAM,CAACM,KAA1B,CADtB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcN,MAAM,CAACc,MAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0Bd,MAAM,CAACe,YAAjC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaf,MAAM,CAACC,KAApB,CAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAED,MAAM,CAACgB,GAAnB;AAAwB,IAAA,KAAK,EAAEhB,MAAM,CAACiB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,CADH,CADF;AAaD,CApBD;;AAsBA,eAAeT,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Votes from \"./Votes\";\r\n\r\nconst RedditDiv = styled.div`\r\n  display:grid;\r\n  grid-template-columns: 33% 33% 33%\r\n  padding: 20px;\r\n  background: ${object => object.score%2 === 0 ? 'orange' : 'blue'};\r\n  font-family: arial, sans-serif;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\nconst regularDisplay = info => {\r\n  return <div>{info}</div>;\r\n};\r\n\r\n// returns\r\nconst dataToLinkComponent = (permalink, title) => {\r\n  const url = `https://www.reddit.com/${permalink}`;\r\n  return <a href={url}>{title}</a>;\r\n};\r\n\r\nconst Reddit = props => {\r\n  //console.log(props.redditData);\r\n\r\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\r\n  const resource = props.redditData;\r\n  //const resourceArray = resourceToResourceArray(resource)\r\n\r\n  return (\r\n    <div>\r\n      {resource.map((object, index) => (\r\n        <RedditDiv key={index} {...object}>\r\n          {dataToLinkComponent(object.permalink, object.title)}\r\n          <div>AUTHOR: {object.author}</div>\r\n          <div>NUMBER OF COMMENTS: {object.num_comments}</div>\r\n          <div>SCORE: {object.score}</div>\r\n          <Votes ups={object.ups} downs={object.downs} />\r\n        </RedditDiv>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reddit;\r\n"]},"metadata":{},"sourceType":"module"}