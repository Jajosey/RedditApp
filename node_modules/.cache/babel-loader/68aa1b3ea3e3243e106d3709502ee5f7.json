{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\fortressapp\\\\src\\\\components\\\\Reddit.js\";\nimport React from \"react\";\n\nconst regularDisplay = info => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, info);\n}; // returns\n\n\nconst dataToLinkComponent = (permalink, title) => {\n  const url = `https://www.reddit.com/${permalink}`;\n  return React.createElement(\"a\", {\n    href: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, title);\n};\n\nconst Reddit = props => {\n  //console.log(props.redditData);\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\n  const resource = props.redditData; //const resourceArray = resourceToResourceArray(resource)\n\n  console.log(\"resource as a whole \", resource);\n  return React.createElement(\"div\", {\n    className: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, resource.map((object, index) => React.createElement(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"TITLE: \", dataToLinkComponent(object.permalink, object.title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"AUTHOR: \", object.author), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"UP VOTES? \", object.ups), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"DOWN VOTES? \", object.downs), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"NUMBER OF COMMENTS: \", object.num_comments), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"SCORE: \", object.score), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};\n\nexport default Reddit;","map":{"version":3,"sources":["F:/Work/fortressapp/src/components/Reddit.js"],"names":["React","regularDisplay","info","dataToLinkComponent","permalink","title","url","Reddit","props","resource","redditData","console","log","map","object","index","author","ups","downs","num_comments","score"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CAAP;AACD,CAFD,C,CAIA;;;AACA,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChD,QAAMC,GAAG,GAAI,0BAAyBF,SAAU,EAAhD;AACA,SAAO;AAAG,IAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CAAP;AACD,CAHD;;AAKA,MAAME,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAvB,CAHsB,CAItB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACI,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUZ,mBAAmB,CAACW,MAAM,CAACV,SAAR,EAAmBU,MAAM,CAACT,KAA1B,CAD7B,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcS,MAAM,CAACE,MAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,MAAM,CAACG,GAArB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBH,MAAM,CAACI,KAAvB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBJ,MAAM,CAACK,YAA/B,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWL,MAAM,CAACM,KAAlB,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADD,CADH,CADF;AAsBD,CA5BD;;AA8BA,eAAeb,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst regularDisplay = info => {\r\n  return <div>{info}</div>;\r\n};\r\n\r\n// returns\r\nconst dataToLinkComponent = (permalink, title) => {\r\n  const url = `https://www.reddit.com/${permalink}`;\r\n  return <a href={url}>{title}</a>;\r\n};\r\n\r\nconst Reddit = props => {\r\n  //console.log(props.redditData);\r\n  //const {title, author, permalink, ups, downs} = props.redditDatadata\r\n  const resource = props.redditData;\r\n  //const resourceArray = resourceToResourceArray(resource)\r\n  console.log(\"resource as a whole \", resource);\r\n  return (\r\n    <div className=\"comment\">\r\n      {resource.map((object, index) => (\r\n        <div key={index}>\r\n          TITLE: {dataToLinkComponent(object.permalink, object.title)}\r\n          <div>AUTHOR: {object.author}</div>\r\n          <p>UP VOTES? {object.ups}</p>\r\n          <p>DOWN VOTES? {object.downs}</p>\r\n          <p>NUMBER OF COMMENTS: {object.num_comments}</p>\r\n          <p>SCORE: {object.score}</p>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n          <p></p>\r\n\r\n\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reddit;\r\n"]},"metadata":{},"sourceType":"module"}